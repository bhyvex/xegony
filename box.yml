# all folders and files are relative to the path
# where fileb0x was run at!

# default: main
pkg: box

# destination
dest: "./box/"

# gofmt
# type: bool
# default: false
fmt: true

# updater allows you to update a b0x in a running server
# without having to restart it
updater:
  # disabled by default
  enabled: false

  # empty mode creates a empty b0x file with just the
  # server and the filesystem, then you'll have to upload
  # the files later using the cmd:
  # fileb0x -update=http://server.com:port b0x.yaml
  #
  # it avoids long compile time
  empty: false

  # amount of uploads at the same time
  workers: 3

  # to get a username and password from a env variable
  # leave username and password blank (username: "")
  # then set your username and password in the env vars
  # (no caps) -> fileb0x_username and fileb0x_password
  #
  # when using env vars, set it before generating a b0x
  # so it can be applied to the updater server.
  username: "user" # username: ""
  password: "pass" # password: ""
  port: 8041


# compress files
# at the moment, only supports gzip
#
# type: object
compression:
  # activates the compression
  #
  # type: bool
  # default: false
  compress: false

  # valid values are:
  # -> "NoCompression"
  # -> "BestSpeed"
  # -> "BestCompression"
  # -> "DefaultCompression" or ""
  #
  # type: string
  # default: "DefaultCompression" # when: Compress == true && Method == ""
  method: ""

  # true = do it yourself (the file is written as gzip compressed file into the memory file system)
  # false = decompress files at run time (while writing file into memory file system)
  #
  # type: bool
  # default: false
  keep: false

# ---------------
# -- DANGEROUS --
# ---------------
#
# cleans the destination folder (only b0xfiles)
# you should use this when using the spread function
# type: bool
# default: false
clean: true

# default: ab0x.go
output: "box.go"

# [unexporTed] builds non-exporTed functions, variables and types...
# type: bool
# default: false
unexporTed: false

# [spread] means it will make a file to hold all fileb0x data
# and each file into a separaTed .go file
#
# example:
# theres 2 files in the folder assets, they're: hello.json and world.txt
# when spread is activaTed, fileb0x will make a file:
# b0x.go or [output]'s data, assets_hello.json.go and assets_world.txt.go
#
#
# type: bool
# default: false
spread: true

# type: array of objects
custom:

  # type: array of strings
  - files:
    - "./boxsrc/"
    exclude:
      - "/.DS_Store"
      - "/template/.DS_Store"
      - "/www/.DS_Store"
    # base is the path that will be removed from all files' path
    # type: string
    base: "boxsrc"

    # prefix is the path that will be added to all files' path
    # type: string
    #prefix: "/"
