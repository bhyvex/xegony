get:
  tags: ["LootTable"]
  description: Details about a specific lootTable
  operationId: getLootTable
  parameters:
    - in: path
      name: lootTableID
      required: true
      description: ID
      type: integer
    - in: query
      type: string
      name: format
      enum: [json, xml, yaml]
      default: json
  responses:
    200:
      description: '200 / OK'
      schema:
        $ref: '#/definitions/LootTable'
put:
  tags: ["LootTable"]
  description: Edit LootTable
  operationId: editLootTable
  security:
    - OauthSecurity: [moderator, admin]
  parameters:
    - in: path
      name: lootTableID
      required: true
      description: ID
      type: integer
    - in: body
      name: body
      description: LootTable
      required: true
      schema:
        $ref: '#/definitions/LootTable'
    - in: query
      type: string
      name: format
      enum: [json, xml, yaml]
      default: json
  responses:
    200:
      description: '200 / OK'
      schema:
        $ref: '#/definitions/LootTable'    
delete:
  tags: ["LootTable"]
  description: Delete lootTable
  operationId: deleteLootTable
  security:
    - OauthSecurity: [admin]
  parameters:
    - in: path
      name: lootTableID
      required: true
      description: ID of lootTable
      type: integer
    - in: query
      type: string
      name: format
      enum: [json, xml, yaml]
      default: json
  responses:
    200:
      description: '200 / OK'
      schema:
        $ref: '#/definitions/LootTable'